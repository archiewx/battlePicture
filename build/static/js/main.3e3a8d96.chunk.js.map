{"version":3,"sources":["services/index.js","models/global.js","store.js","pages/Main/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","jsonpInstance","adapter","JsonpAdapter","requestSGDoutuList","options","a","url","params","headers","Referer","Math","random","toString","slice","encodeURIComponent","query","interceptors","response","use","config","data","global","namespace","state","sgLoading","sgDoutu","start","reqFrom","xml_len","list","more","total","effects","fetchSogouTuList","io","select","ret","status","put","globalActions","setState","items","maxEnd","reducers","updateQuery","payload","setPage","page","createActions","wrapper","models","store","useReduxState","MainPage","dispatch","useReduxDispatch","useState","isRetry","setRetry","refreshTuList","message","warn","useEffect","onSearch","spinning","tip","type","size","onClick","style","height","align","justify","span","className","placeholder","onKeyPress","e","key","onChange","target","value","suffix","loading","shape","icon","UndoOutlined","simple","current","pageSize","filter","item","map","onDoubleClick","window","$api","copyRemoteIMG","then","success","catch","err","error","onCopyPic","hoverable","cover","alt","src","thumbUrl","docId","href","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","top","duration","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e3a8d96.chunk.js","sourcesContent":["import axios from 'axios';\nimport JsonpAdapter from 'axios-jsonp';\n\nconst instance = axios.create({});\nconst jsonpInstance = axios.create({\n  adapter: JsonpAdapter,\n});\n\ninstance.interceptors.response.use((config) => {\n  return config.data;\n});\n\njsonpInstance.interceptors.response.use((config) => {\n  return config.data;\n});\n\nexport async function requestDoutuList(options) {\n  return instance.get('https://www.dbbqb.com/api/search/json', {\n    params: { ...options },\n  });\n}\n\nexport async function requestSGDoutuList(options) {\n  return jsonpInstance({\n    url: 'https://pic.sogou.com/napi/wap/pic',\n    params: { ...options },\n    headers: {\n      Referer: `https://pic.sogou.com/pic/emo/searchList.jsp?statref=search_form&uID=${(\n        Math.random() * 10000000\n      )\n        .toString(16)\n        .slice(1)}&spver=0&rcer=${encodeURIComponent(options.query)}`,\n    },\n  });\n}\n","import { createActions, io } from '@nnwa/redux-saga-actions';\nimport { requestSGDoutuList } from '../services';\n\nconst global = {\n  namespace: 'global',\n\n  state: {\n    sgLoading: false,\n    sgDoutu: {\n      query: { query: '哈哈 表情', start: 0, reqFrom: 'wap_result', xml_len: 48 },\n      list: [],\n      more: 0,\n      total: 0,\n    },\n  },\n\n  effects: {\n    *fetchSogouTuList() {\n      const { sgDoutu } = yield io.select((state) => state.global);\n      const ret = yield requestSGDoutuList(sgDoutu.query);\n\n      if (ret.status === 0) {\n        const { data } = ret;\n        yield io.put(\n          globalActions.setState({\n            sgDoutu: {\n              query: { ...sgDoutu.query },\n              list: data.items,\n              more: sgDoutu.query.start < data.maxEnd,\n              total: data.maxEnd,\n            },\n          })\n        );\n        return true;\n      }\n      return false;\n    },\n  },\n\n  reducers: {\n    updateQuery(state, { payload }) {\n      return {\n        ...state,\n        sgDoutu: {\n          ...state.sgDoutu,\n          query: { ...state.sgDoutu.query, ...payload },\n        },\n      };\n    },\n\n    setPage(state, { payload }) {\n      return {\n        ...state,\n        sgDoutu: {\n          ...state.sgDoutu,\n          query: {\n            ...state.sgDoutu.query,\n            start: (payload.page - 1) * state.sgDoutu.query.xml_len,\n          },\n        },\n      };\n    },\n  },\n};\n\nexport default global;\n\nexport const globalActions = createActions(global);\n","import { wrapper } from '@nnwa/redux-saga-actions';\nimport * as models from './models';\n\nexport const { store, useReduxState } = wrapper(models);\n\n","import { useReduxDispatch } from '@nnwa/redux-saga-actions';\nimport { UndoOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Card,\n  Col,\n  Input,\n  message,\n  Pagination,\n  Row,\n  Space,\n  Spin,\n} from 'antd';\nimport { useEffect, useState } from 'react';\nimport { globalActions } from '../../models/global';\nimport { useReduxState } from '../../store';\n\nfunction MainPage() {\n  const { sgDoutu, sgLoading } = useReduxState((state) => state.global);\n  const dispatch = useReduxDispatch();\n\n  const [isRetry, setRetry] = useState(false);\n  const refreshTuList = async () => {\n    dispatch(globalActions.setState({ sgLoading: true }));\n    const success = await dispatch(globalActions.fetchSogouTuList());\n    if (success) {\n      dispatch(globalActions.setState({ sgLoading: false }));\n      return;\n    }\n    message.warn('获取表情失败，点击重试');\n    setRetry(true);\n  };\n  useEffect(() => {\n    refreshTuList();\n  }, []);\n\n  const onSearch = () => {\n    refreshTuList();\n  };\n\n  const onCopyPic = (item) => {\n    window.$api\n      .copyRemoteIMG(item)\n      .then(() => {\n        message.success('已复制粘贴板，CTRL/CMD+C直接使用~');\n      })\n      .catch((err) => {\n        message.error(err.message);\n      });\n  };\n\n  return (\n    <div>\n      <Spin\n        spinning={sgLoading}\n        tip={\n          isRetry ? (\n            <Button type=\"primary\" size=\"small\" onClick={refreshTuList}>\n              💔 Failed...Please Retry~\n            </Button>\n          ) : null\n        }\n      >\n        <Row style={{ height: 50 }} align=\"middle\" justify=\"space-between\">\n          <Col span={14}>\n            <Input\n              className=\"pic-search no-drag\"\n              placeholder=\"哈哈哈\"\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') onSearch();\n              }}\n              onChange={(e) => {\n                dispatch(globalActions.updateQuery({ query: e.target.value + ' 表情' }));\n              }}\n              suffix={\n                <Space>\n                  <Button\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={onSearch}\n                    loading={sgLoading}\n                    className=\"pic-search-btn\"\n                  >\n                    搜索\n                  </Button>\n                  <Button\n                    size=\"small\"\n                    shape=\"circle\"\n                    type=\"primary\"\n                    loading={sgLoading}\n                    onClick={refreshTuList}\n                    icon={<UndoOutlined />}\n                  ></Button>\n                </Space>\n              }\n            />\n          </Col>\n          <Col>\n            <Pagination\n              className=\"no-drag\"\n              simple\n              current={sgDoutu.query.start / 48 + 1}\n              total={sgDoutu.total}\n              pageSize={48}\n              onChange={(page) => {\n                dispatch(globalActions.setPage({ page }));\n                refreshTuList();\n              }}\n            />\n          </Col>\n        </Row>\n        <Row className=\"pic-wrapper\">\n          {sgDoutu.list\n            .filter((item) => item.type !== '.gif')\n            .map((item) => (\n              <Card\n                onDoubleClick={() => onCopyPic(item)}\n                className=\"card-pic\"\n                key={item.docId}\n                hoverable\n                cover={<img alt=\"example\" src={item.thumbUrl} />}\n              />\n            ))}\n        </Row>\n        <Row style={{ height: 20 }}>\n          <div className=\"tips\">\n            &gt; 反馈可发邮件到\n            <a href=\"mailto:zhenglfsir@gmail.com\">zhenglfsir@gmail.com</a>\n          </div>\n        </Row>\n      </Spin>\n    </div>\n  );\n}\n\nexport default MainPage;\n","import { Route, Switch } from 'react-router-dom';\nimport MainPage from './pages/Main';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'antd/dist/antd.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { message } from 'antd';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\n\nmessage.config({ top: 0, duration: 1500 });\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}